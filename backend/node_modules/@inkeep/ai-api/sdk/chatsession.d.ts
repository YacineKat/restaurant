import { SDKOptions } from "../lib/config";
import { ClientSDK, RequestOptions } from "../lib/sdks";
import * as components from "../models/components";
import * as operations from "../models/operations";
export declare enum CreateAcceptEnum {
    applicationJson = "application/json",
    textEventStream = "text/event-stream"
}
export declare enum ContinueAcceptEnum {
    applicationJson = "application/json",
    textEventStream = "text/event-stream"
}
export declare class ChatSession extends ClientSDK {
    private readonly options$;
    constructor(options?: SDKOptions);
    /**
     * Create Chat Session
     */
    create(input: components.CreateChatSessionWithChatResultInput, options?: RequestOptions & {
        acceptHeaderOverride?: CreateAcceptEnum;
    }): Promise<operations.CreateResponse>;
    /**
     * Continue Chat Session
     */
    continue(chatSessionId: string, continueChatSessionWithChatResultInput: components.ContinueChatSessionWithChatResultInput, options?: RequestOptions & {
        acceptHeaderOverride?: ContinueAcceptEnum;
    }): Promise<operations.ContinueResponse>;
}
//# sourceMappingURL=chatsession.d.ts.map