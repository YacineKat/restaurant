import { EventStream } from "../../lib/event-streams";
import * as components from "../components";
import * as z from "zod";
export type CreateResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Successful Response
     */
    chatResult?: components.ChatResult | undefined;
    /**
     * Successful Response
     */
    chatResultStream?: EventStream<components.ChatResultStream> | undefined;
};
/** @internal */
export declare namespace CreateResponse$ {
    type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        ChatResult?: components.ChatResult$.Inbound | undefined;
        ChatResultStream?: ReadableStream<Uint8Array> | undefined;
    };
    const inboundSchema: z.ZodType<CreateResponse, z.ZodTypeDef, Inbound>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        ChatResult?: components.ChatResult$.Outbound | undefined;
        ChatResultStream?: never | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateResponse>;
}
//# sourceMappingURL=create.d.ts.map