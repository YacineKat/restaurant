import { AssistantMessage, AssistantMessage$ } from "./assistantmessage";
import { UserMessage, UserMessage$ } from "./usermessage";
import * as z from "zod";
export type Message = (UserMessage & {
    role: "user";
}) | (AssistantMessage & {
    role: "assistant";
});
/** @internal */
export declare namespace Message$ {
    type Inbound = (UserMessage$.Inbound & {
        role: "user";
    }) | (AssistantMessage$.Inbound & {
        role: "assistant";
    });
    type Outbound = (UserMessage$.Outbound & {
        role: "user";
    }) | (AssistantMessage$.Outbound & {
        role: "assistant";
    });
    const inboundSchema: z.ZodType<Message, z.ZodTypeDef, Inbound>;
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Message>;
}
//# sourceMappingURL=message.d.ts.map