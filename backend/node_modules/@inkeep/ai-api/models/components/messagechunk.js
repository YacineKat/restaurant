"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageChunk$ = exports.Four$ = exports.Four = void 0;
const z = __importStar(require("zod"));
var Four;
(function (Four) {
    Four["Stop"] = "stop";
    Four["Length"] = "length";
    Four["ContentFilter"] = "content_filter";
})(Four || (exports.Four = Four = {}));
/** @internal */
exports.Four$ = z.nativeEnum(Four);
/** @internal */
var MessageChunk$;
(function (MessageChunk$) {
    MessageChunk$.inboundSchema = z
        .object({
        chat_session_id: z.nullable(z.string()).optional(),
        content_chunk: z.string(),
        finish_reason: z.nullable(z.any()).optional(),
    })
        .transform((v) => {
        return {
            ...(v.chat_session_id === undefined ? null : { chatSessionId: v.chat_session_id }),
            contentChunk: v.content_chunk,
            ...(v.finish_reason === undefined ? null : { finishReason: v.finish_reason }),
        };
    });
    MessageChunk$.outboundSchema = z
        .object({
        chatSessionId: z.nullable(z.string()).optional(),
        contentChunk: z.string(),
        finishReason: z.nullable(z.any()).optional(),
    })
        .transform((v) => {
        return {
            ...(v.chatSessionId === undefined ? null : { chat_session_id: v.chatSessionId }),
            content_chunk: v.contentChunk,
            ...(v.finishReason === undefined ? null : { finish_reason: v.finishReason }),
        };
    });
})(MessageChunk$ || (exports.MessageChunk$ = MessageChunk$ = {}));
//# sourceMappingURL=messagechunk.js.map