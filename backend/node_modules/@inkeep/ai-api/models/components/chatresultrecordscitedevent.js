"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatResultRecordsCitedEvent$ = void 0;
const recordscited_1 = require("./recordscited");
const z = __importStar(require("zod"));
/** @internal */
var ChatResultRecordsCitedEvent$;
(function (ChatResultRecordsCitedEvent$) {
    ChatResultRecordsCitedEvent$.inboundSchema = z
        .object({
        event: z.literal("records_cited").optional(),
        data: z
            .string()
            .transform((v, ctx) => {
            try {
                return JSON.parse(v);
            }
            catch (err) {
                ctx.addIssue({
                    code: z.ZodIssueCode.custom,
                    message: `malformed json: ${err}`,
                });
                return z.NEVER;
            }
        })
            .pipe(recordscited_1.RecordsCited$.inboundSchema),
    })
        .transform((v) => {
        return {
            ...(v.event === undefined ? null : { event: v.event }),
            data: v.data,
        };
    });
    ChatResultRecordsCitedEvent$.outboundSchema = z
        .object({
        event: z.literal("records_cited").default("records_cited"),
        data: recordscited_1.RecordsCited$.outboundSchema,
    })
        .transform((v) => {
        return {
            event: v.event,
            data: v.data,
        };
    });
})(ChatResultRecordsCitedEvent$ || (exports.ChatResultRecordsCitedEvent$ = ChatResultRecordsCitedEvent$ = {}));
//# sourceMappingURL=chatresultrecordscitedevent.js.map