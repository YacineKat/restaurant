import { RecordType, RecordType$ } from "./recordtype";
import * as z from "zod";
export type RecordT = {
    /**
     * The type of record
     */
    type: RecordType;
    url?: string | null | undefined;
    title?: string | null | undefined;
    description?: string | null | undefined;
    breadcrumbs?: Array<string> | null | undefined;
};
/** @internal */
export declare namespace RecordT$ {
    type Inbound = {
        type: RecordType$.Inbound;
        url?: string | null | undefined;
        title?: string | null | undefined;
        description?: string | null | undefined;
        breadcrumbs?: Array<string> | null | undefined;
    };
    const inboundSchema: z.ZodType<RecordT, z.ZodTypeDef, Inbound>;
    type Outbound = {
        type: RecordType$.Outbound;
        url?: string | null | undefined;
        title?: string | null | undefined;
        description?: string | null | undefined;
        breadcrumbs?: Array<string> | null | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RecordT>;
}
//# sourceMappingURL=record.d.ts.map