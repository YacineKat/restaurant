import { ChatSessionInput, ChatSessionInput$ } from "./chatsessioninput";
import * as z from "zod";
export declare enum ChatModeOptions {
    Turbo = "turbo",
    Auto = "auto"
}
export type ChatMode = ChatModeOptions | string;
export type CreateChatSessionWithChatResultInput = {
    integrationId: string;
    chatSession: ChatSessionInput;
    chatMode?: ChatModeOptions | string | undefined;
    stream?: boolean | undefined;
};
/** @internal */
export declare const ChatModeOptions$: z.ZodNativeEnum<typeof ChatModeOptions>;
/** @internal */
export declare namespace ChatMode$ {
    type Inbound = ChatModeOptions | string;
    type Outbound = ChatModeOptions | string;
    const inboundSchema: z.ZodType<ChatMode, z.ZodTypeDef, Inbound>;
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChatMode>;
}
/** @internal */
export declare namespace CreateChatSessionWithChatResultInput$ {
    type Inbound = {
        integration_id: string;
        chat_session: ChatSessionInput$.Inbound;
        chat_mode?: ChatModeOptions | string | undefined;
        stream?: boolean | undefined;
    };
    const inboundSchema: z.ZodType<CreateChatSessionWithChatResultInput, z.ZodTypeDef, Inbound>;
    type Outbound = {
        integration_id: string;
        chat_session: ChatSessionInput$.Outbound;
        chat_mode?: ChatModeOptions | string | undefined;
        stream: boolean;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateChatSessionWithChatResultInput>;
}
//# sourceMappingURL=createchatsessionwithchatresultinput.d.ts.map